<div id="map" class="map"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBFauPb-2KMpvawQdAHogYpUvwFfmQccAw&callback=initMap" async defer></script>
<script>
  var map;
  var currentMarker;
  var clickedMarker;
  var existingTargets = '<%= raw targets.to_json %>';
  var circlesDictonary = {};

  function initMap() {
    var myLatlng = { lat: -34.8956766, lng: -56.1665157 };

    map = new google.maps.Map(document.getElementById('map'), {
      center: myLatlng,
      zoom: 14
    });

    showCurrentLocation();

    map.addListener('click', function(e) {
      showCreateTargetSection();
      placeMarkerAndPanTo(e.latLng, map);
      loadFormLatLng(e.latLng);
    });

    loadExistingTargets();
  }

  function hideSelectedMarker() {
    if (currentMarker) {
      currentMarker.setMap(null);
    }
    document.getElementById('target_latitude').value = null;
    document.getElementById('target_longitude').value = null;
  }

  function placeMarkerAndPanTo(latLng, map) {
    hideSelectedMarker();
    var iconUrl = '<%= Rails.application.config.app_icons_base_url %>current-marker.png';
    currentMarker = new google.maps.Marker({
      position: latLng,
      animation: google.maps.Animation.DROP,
      icon: iconUrl,
      map: map
    });
    map.panTo(latLng);
  }

  function loadFormLatLng(latLng) {
    document.getElementById('target_latitude').value = latLng.lat().toFixed(15);
    document.getElementById('target_longitude').value = latLng.lng().toFixed(15);
  }

  function loadExistingTargets() {
    var targetList = JSON.parse(existingTargets);
    for (var i = 0; i < targetList.length; i++) {
      var target = targetList[i];
      var pos = { lat: parseFloat(target.latitude), lng: parseFloat(target.longitude) };
      addTargetCircle(target);
      addTargetMarker(target);
    }
  }

  function addTargetCircle(target) {
    var pos = { lat: parseFloat(target.latitude), lng: parseFloat(target.longitude) };
    var circle = new google.maps.Circle({
      strokeColor: '#efc537',
      strokeOpacity: .8,
      strokeWeight: 2,
      fillColor: '#efc537',
      fillOpacity: .35,
      map: map,
      center: pos,
      radius: target.size,
      targetId: target.id
    });
    circlesDictonary[target.id] = circle;
  }

  function addTargetMarker(target) {
    var pos = { lat: parseFloat(target.latitude), lng: parseFloat(target.longitude) };
    var iconUrl = getIconUrl(target.topic);
    if (iconUrl) {
      var icon = generateIconObject(iconUrl);
      var marker = new google.maps.Marker({
        map: map,
        position: pos,
        icon: icon,
        targetId: target.id,
        targetTitle: target.title,
        targetSize: target.size,
        targetTopic: target.topic
      });
      google.maps.event.addListener(marker, 'click', function () {
        clickedMarker = this;
        fillTargetModalData(clickedMarker)
        $('#targetModal').modal('toggle');
      });
    }
  }

  function getIconUrl(topic) {
    var iconUrl;
    $.ajax({
      dataType: 'json',
      async: false,
      url: 'targets/topic_icon?topic=' + topic,
      success: function(data) {
        iconUrl = '<%= Rails.application.config.app_icons_base_url %>' + data.icon;
      }
    });
    return iconUrl;
  }

  function showCurrentLocation() {
    infoWindow = new google.maps.InfoWindow;
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        infoWindow.setPosition(pos);
        infoWindow.setContent('<%=I18n.t(:maps_location_found)%>');
        infoWindow.open(map);
        map.setCenter(pos);
      });
    }
  }

  function deleteTarget() {
    $.ajax({
      dataType: 'json',
      async: false,
      method: 'delete',
      url: 'targets/' + clickedMarker.targetId,
      success: function(data) {
        toastr.success('<%=I18n.t(:alert_success_target_deleted)%>');
        circlesDictonary[clickedMarker.targetId].setMap(null);
        clickedMarker.setMap(null);
        clickedMarker = null;
        $('#targetModal').modal('toggle');
      }
    });
  }
</script>
